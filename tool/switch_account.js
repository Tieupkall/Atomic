const path = require('path');
const fs = require('fs');

// Import loginModule
const loginModule = require('./includes/login/loginandby.js');

async function switchAccountShell() {
    try {
        const args = process.argv.slice(2);
        
        if (args.length === 0) {
            console.log('‚ùå Vui l√≤ng cung c·∫•p t√™n t√†i kho·∫£n ho·∫∑c s·ªë th·ª© t·ª±');
            console.log('C√°ch s·ª≠ d·ª•ng: node switch_account.js <t√™n_t√†i_kho·∫£n_ho·∫∑c_s·ªë_th·ª©_t·ª±>');
            process.exit(1);
        }

        const input = args[0];
        const current = loginModule.getCurrentAccount();
        const accounts = loginModule.getAllAccounts();
        
        if (Object.keys(accounts).length === 0) {
            console.log('‚ùå Kh√¥ng t√¨m th·∫•y t√†i kho·∫£n n√†o');
            process.exit(1);
        }

        // Hi·ªÉn th·ªã danh s√°ch t√†i kho·∫£n
        if (input === 'list' || input === 'ls') {
            console.log('üì± Danh s√°ch t√†i kho·∫£n:\n');
            let index = 1;
            for (const [name, data] of Object.entries(accounts)) {
                const status = name === current ? 'üü¢ (hi·ªán t·∫°i)' : '‚ö™';
                const email = data.EMAIL || 'N/A';
                console.log(`${index}. ${status} ${name}`);
                console.log(`   üìß ${email}\n`);
                index++;
            }
            process.exit(0);
        }

        let targetAccount = null;
        const accountList = Object.keys(accounts);

        // N·∫øu input l√† s·ªë
        if (!isNaN(input)) {
            const index = parseInt(input) - 1;
            if (index >= 0 && index < accountList.length) {
                targetAccount = accountList[index];
            } else {
                console.log('‚ùå S·ªë th·ª© t·ª± kh√¥ng h·ª£p l·ªá');
                process.exit(1);
            }
        } else {
            // N·∫øu input l√† t√™n t√†i kho·∫£n
            if (accounts[input]) {
                targetAccount = input;
            } else {
                console.log('‚ùå Kh√¥ng t√¨m th·∫•y t√†i kho·∫£n:', input);
                process.exit(1);
            }
        }

        if (targetAccount === current) {
            console.log(`‚ö†Ô∏è ƒê√£ ƒëang d√πng t√†i kho·∫£n '${targetAccount}'`);
            process.exit(0);
        }

        console.log(`üîÑ ƒêang chuy·ªÉn sang t√†i kho·∫£n '${targetAccount}'...`);
        
        const result = await loginModule.switchAccount(targetAccount);
        
        if (result) {
            console.log(`‚úÖ ƒê√£ chuy·ªÉn sang t√†i kho·∫£n '${targetAccount}'`);
            console.log('üîÑ Bot s·∫Ω restart...');
        } else {
            console.log('‚ùå Chuy·ªÉn ƒë·ªïi t√†i kho·∫£n th·∫•t b·∫°i');
            process.exit(1);
        }

    } catch (error) {
        console.log(`‚ùå L·ªói: ${error.message}`);
        process.exit(1);
    }
}

// Run
switchAccountShell();